@inject NavigationManager Navigation
@inject Microsoft.AspNetCore.Components.Authorization.AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Components.Authorization

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">IznajmljivanjeAutomobila</a>
        <button title="Navigation menu" @onclick="ToggleNavMenu" class="navbar-toggler">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/">
                <span class="oi oi-home" aria-hidden="true"></span> Naslovna
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/automobili">
                <span class="fas fa-car" aria-hidden="true"></span> Automobili  <!-- Promenjeno na Font Awesome ikonu -->
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/reservation">
                <span class="oi oi-calendar" aria-hidden="true"></span> Rezervacija Automobila
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/view-reservations">
                <span class="oi oi-list" aria-hidden="true"></span> Pregled Rezervacija
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/kontakt">
                <span class="oi oi-phone" aria-hidden="true"></span> Kontakt
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/pregled-upita">
                <span class="oi oi-info" aria-hidden="true"></span> Pregled upita
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/onama">
                <span class="oi oi-info" aria-hidden="true"></span> O nama
            </NavLink>
        </div>


        @if (isAuthenticated)
        {
            <div class="nav-item px-3">
                <button class="nav-link btn btn-link" @onclick="HandleLogout">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Odjava
                </button>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/login">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Prijava
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool isNavMenuOpen = false;
    private bool isAuthenticated = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        isAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;
    }

    private void ToggleNavMenu()
    {
        isNavMenuOpen = !isNavMenuOpen;
    }

    private string NavMenuCssClass => isNavMenuOpen ? "nav-menu open" : "nav-menu";

    private async Task HandleLogout()
    {
        if (AuthenticationStateProvider is CustomAuthenticationStateProvider customAuthStateProvider)
        {
            await customAuthStateProvider.LogoutUserAsync(); // Izvršava odjavu korisnika
            isAuthenticated = false; // Resetovanje statusa autentifikacije
            Navigation.NavigateTo("/login", true); // Preusmjeravanje na stranicu za prijavu
        }
    }
}
